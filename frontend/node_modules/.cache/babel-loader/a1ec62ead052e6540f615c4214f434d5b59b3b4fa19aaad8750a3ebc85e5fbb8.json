{"ast":null,"code":"import axios from 'axios';\n\n// Base API URL - change this to match your backend\nconst API_URL = 'http://localhost:8000';\n\n// Setup axios interceptors for token handling\naxios.interceptors.request.use(config => {\n  const token = localStorage.getItem('token');\n  if (token) {\n    config.headers['Authorization'] = `Bearer ${token}`;\n  }\n  return config;\n}, error => {\n  return Promise.reject(error);\n});\n\n// Response interceptor for handling token expiration\naxios.interceptors.response.use(response => response, error => {\n  if (error.response && error.response.status === 401) {\n    // Clear token on 401 Unauthorized\n    localStorage.removeItem('token');\n    window.location = '/login';\n  }\n  return Promise.reject(error);\n});\n\n// Auth API\nconst auth = {\n  login: (email, password) => axios.post(`${API_URL}/login`, {\n    email,\n    password\n  }),\n  register: userData => axios.post(`${API_URL}/register`, userData),\n  logout: () => {\n    localStorage.removeItem('token');\n    delete axios.defaults.headers.common['Authorization'];\n  }\n};\n\n// Products API\nconst products = {\n  getAll: () => axios.get(`${API_URL}/products`),\n  getById: id => axios.get(`${API_URL}/products/${id}`),\n  create: productData => axios.post(`${API_URL}/products`, productData),\n  update: (id, productData) => axios.put(`${API_URL}/products/${id}`, productData),\n  delete: id => axios.delete(`${API_URL}/products/${id}`),\n  getStats: () => axios.get(`${API_URL}/dashboard/product-stats`)\n};\n\n// Categories API\nconst categories = {\n  getAll: () => axios.get(`${API_URL}/categories`),\n  create: name => axios.post(`${API_URL}/categories`, {\n    name\n  }),\n  update: (id, name) => axios.put(`${API_URL}/categories/${id}`, {\n    name\n  }),\n  delete: id => axios.delete(`${API_URL}/categories/${id}`)\n};\n\n// Dashboard API\nconst dashboard = {\n  getStats: () => axios.get(`${API_URL}/dashboard/stats`),\n  getLowStockItems: () => axios.get(`${API_URL}/dashboard/low-stock`),\n  getRecentActivity: () => axios.get(`${API_URL}/dashboard/activity`)\n};\n\n// Analytics API\nconst analytics = {\n  getInventoryTrends: period => axios.get(`${API_URL}/analytics/trends`, {\n    params: {\n      period\n    }\n  }),\n  getStockForecasting: productId => axios.get(`${API_URL}/analytics/forecast/${productId}`)\n};\n\n// Notifications API\nconst notifications = {\n  getAll: () => axios.get(`${API_URL}/notifications`),\n  markAsRead: id => axios.patch(`${API_URL}/notifications/${id}/read`),\n  markAllAsRead: () => axios.patch(`${API_URL}/notifications/read-all`)\n};\n\n// Users API (admin only)\nconst users = {\n  getAll: () => axios.get(`${API_URL}/users`),\n  getById: id => axios.get(`${API_URL}/users/${id}`),\n  update: (id, userData) => axios.put(`${API_URL}/users/${id}`, userData),\n  delete: id => axios.delete(`${API_URL}/users/${id}`),\n  updateRole: (id, isAdmin) => axios.patch(`${API_URL}/users/${id}/role`, {\n    isAdmin\n  })\n};\n\n// Add sales API methods\nconst sales = {\n  getAll: () => axios.get(`${API_URL}/sales`),\n  getById: id => axios.get(`${API_URL}/sales/${id}`),\n  create: saleData => axios.post(`${API_URL}/sales`, saleData),\n  cancel: id => axios.put(`${API_URL}/sales/${id}/cancel`),\n  getStats: params => axios.get(`${API_URL}/sales/stats`, {\n    params\n  })\n};\nexport default {\n  auth,\n  products,\n  categories,\n  dashboard,\n  analytics,\n  notifications,\n  users,\n  sales\n};","map":{"version":3,"names":["axios","API_URL","interceptors","request","use","config","token","localStorage","getItem","headers","error","Promise","reject","response","status","removeItem","window","location","auth","login","email","password","post","register","userData","logout","defaults","common","products","getAll","get","getById","id","create","productData","update","put","delete","getStats","categories","name","dashboard","getLowStockItems","getRecentActivity","analytics","getInventoryTrends","period","params","getStockForecasting","productId","notifications","markAsRead","patch","markAllAsRead","users","updateRole","isAdmin","sales","saleData","cancel"],"sources":["C:/HCK/FYP/inventory-management-system/frontend/src/services/api.js"],"sourcesContent":["import axios from 'axios';\r\n\r\n// Base API URL - change this to match your backend\r\nconst API_URL = 'http://localhost:8000';\r\n\r\n// Setup axios interceptors for token handling\r\naxios.interceptors.request.use(\r\n  config => {\r\n    const token = localStorage.getItem('token');\r\n    if (token) {\r\n      config.headers['Authorization'] = `Bearer ${token}`;\r\n    }\r\n    return config;\r\n  },\r\n  error => {\r\n    return Promise.reject(error);\r\n  }\r\n);\r\n\r\n// Response interceptor for handling token expiration\r\naxios.interceptors.response.use(\r\n  response => response,\r\n  error => {\r\n    if (error.response && error.response.status === 401) {\r\n      // Clear token on 401 Unauthorized\r\n      localStorage.removeItem('token');\r\n      window.location = '/login';\r\n    }\r\n    return Promise.reject(error);\r\n  }\r\n);\r\n\r\n// Auth API\r\nconst auth = {\r\n  login: (email, password) => axios.post(`${API_URL}/login`, { email, password }),\r\n  register: (userData) => axios.post(`${API_URL}/register`, userData),\r\n  logout: () => {\r\n    localStorage.removeItem('token');\r\n    delete axios.defaults.headers.common['Authorization'];\r\n  }\r\n};\r\n\r\n// Products API\r\nconst products = {\r\n  getAll: () => axios.get(`${API_URL}/products`),\r\n  getById: (id) => axios.get(`${API_URL}/products/${id}`),\r\n  create: (productData) => axios.post(`${API_URL}/products`, productData),\r\n  update: (id, productData) => axios.put(`${API_URL}/products/${id}`, productData),\r\n  delete: (id) => axios.delete(`${API_URL}/products/${id}`),\r\n  getStats: () => axios.get(`${API_URL}/dashboard/product-stats`)\r\n};\r\n\r\n// Categories API\r\nconst categories = {\r\n  getAll: () => axios.get(`${API_URL}/categories`),\r\n  create: (name) => axios.post(`${API_URL}/categories`, { name }),\r\n  update: (id, name) => axios.put(`${API_URL}/categories/${id}`, { name }),\r\n  delete: (id) => axios.delete(`${API_URL}/categories/${id}`)\r\n};\r\n\r\n// Dashboard API\r\nconst dashboard = {\r\n  getStats: () => axios.get(`${API_URL}/dashboard/stats`),\r\n  getLowStockItems: () => axios.get(`${API_URL}/dashboard/low-stock`),\r\n  getRecentActivity: () => axios.get(`${API_URL}/dashboard/activity`)\r\n};\r\n\r\n// Analytics API\r\nconst analytics = {\r\n  getInventoryTrends: (period) => axios.get(`${API_URL}/analytics/trends`, { params: { period } }),\r\n  getStockForecasting: (productId) => axios.get(`${API_URL}/analytics/forecast/${productId}`)\r\n};\r\n\r\n// Notifications API\r\nconst notifications = {\r\n  getAll: () => axios.get(`${API_URL}/notifications`),\r\n  markAsRead: (id) => axios.patch(`${API_URL}/notifications/${id}/read`),\r\n  markAllAsRead: () => axios.patch(`${API_URL}/notifications/read-all`)\r\n};\r\n\r\n// Users API (admin only)\r\nconst users = {\r\n  getAll: () => axios.get(`${API_URL}/users`),\r\n  getById: (id) => axios.get(`${API_URL}/users/${id}`),\r\n  update: (id, userData) => axios.put(`${API_URL}/users/${id}`, userData),\r\n  delete: (id) => axios.delete(`${API_URL}/users/${id}`),\r\n  updateRole: (id, isAdmin) => axios.patch(`${API_URL}/users/${id}/role`, { isAdmin })\r\n};\r\n\r\n// Add sales API methods\r\nconst sales = {\r\n  getAll: () => axios.get(`${API_URL}/sales`),\r\n  getById: (id) => axios.get(`${API_URL}/sales/${id}`),\r\n  create: (saleData) => axios.post(`${API_URL}/sales`, saleData),\r\n  cancel: (id) => axios.put(`${API_URL}/sales/${id}/cancel`),\r\n  getStats: (params) => axios.get(`${API_URL}/sales/stats`, { params })\r\n};\r\n\r\nexport default {\r\n  auth,\r\n  products,\r\n  categories,\r\n  dashboard,\r\n  analytics,\r\n  notifications,\r\n  users,\r\n  sales\r\n}; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}